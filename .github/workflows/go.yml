name: Go

on:
  release:
    types: [created]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build Windows 64
      run: GOOS=windows GOARCH=amd64 go build -v -o bin/ratter.exe main.go

    - name: Build MacOS ARM
      run: GOOS=darwin GOARCH=arm64 go build -v -o bin/ratter main.go

    - name: Build Linux 64
      run: GOOS=linux GOARCH=amd64 go build -v -o bin/ratter main.go

    - name: Upload Windows 64 Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ratter-windows-64
        path: bin/ratter.exe

    - name: Upload MacOS ARM Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ratter-macos-arm
        path: bin/ratter

    - name: Upload Linux 64 Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ratter-linux-64
        path: bin/ratter

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Windows 64 to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: bin/ratter.exe
        asset_name: ratter-windows-64.exe
        asset_content_type: application/octet-stream

    - name: Upload MacOS ARM to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: bin/ratter
        asset_name: ratter-macos-arm
        asset_content_type: application/octet-stream

    - name: Upload Linux 64 to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: bin/ratter
        asset_name: ratter-linux-64
        asset_content_type: application/octet-stream
